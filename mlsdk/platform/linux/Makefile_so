# Use bash for additional echo fancyness
SHELL = /bin/bash

LIBRARY = libmlplatform.so
TARGET = android
PRODUCT = beagleboard

MLSDK_ROOT = ../..
ML_DIR     = ../../mllite

OBJFOLDER = $(CURDIR)/obj

CROSS   = $(ANDROID_ROOT)/prebuilt/linux-x86/toolchain/arm-eabi-4.4.0/bin/arm-eabi-
COMP    = $(CROSS)gcc

LINK_DIR = -L$(ANDROID_ROOT)/out/target/product/$(PRODUCT)/system/lib -L$(ANDROID_ROOT)/out/target/product/$(PRODUCT)/obj/lib

LINK    = $(CROSS)gcc -nostdlib -shared -lc -lgcc -lm -lutils -lcutils  
LINK   += -Wl,--gc-sections -Wl,--no-whole-archive -Wl,-dynamic-linker,/system/bin/linker -Wl,-rpath, -Wl,-rpath-link -Wl,-soname -nostdlib -fpic -Wl,-rpath,$(ANDROID_ROOT)/out/target/product/$(PRODUCT)/obj/lib:$(ANDROID_ROOT)/out/target/product/$(PRODUCT)/system/lib
LINK   += -Wl,--gc-sections -Wl,-shared,-Bsymbolic -Wl,-T,$(ANDROID_ROOT)/build/core/armelf.xsc -Wl,--no-whole-archive -Wl,-soname,$(LIBRARY) $(LINK_DIR)

CFLAGS  = -fpic
CFLAGS += -Wall 
CFLAGS += -D_REENTRANT -DLINUX 
CFLAGS += -DUNICODE -D_UNICODE -DANDROID -DSK_RELEASE -DNDEBUG -D__ARM_ARCH_7TE__ -DI2CDEV=\"/dev/mpu\" -UDEBUG 
CFLAGS += -mthumb-interwork -fpic -fno-exceptions -ffunction-sections -funwind-tables -fstack-protector -g -mfpu=neon -march=armv7-a -mfloat-abi=softfp -fmessage-length=0
CFLAGS += -rdynamic -nostdlib -fpic
#CFLAGS += -DMLMATH 
CFLAGS += -I$(ML_DIR) -I$(ML_PLATFORM)/include
CFLAGS += -I$(MLSDK_ROOT)/mlutils
CFLAGS += -I$(MLSDK_ROOT)

VPATH += $(ML_DIR) $(ML_DIR)/log

####################################################################################################
## sources

MK_NAME = Makefile

ANDROID_SRC = \
	-I${ANDROID_ROOT}/system/core/include \
	-I$(ANDROID_ROOT)/hardware/libhardware/include\
	-I$(ANDROID_ROOT)/hardware/ril/include\
	-I$(ANDROID_ROOT)/dalvik/libnativehelper/include\
	-I$(ANDROID_ROOT)/frameworks/base/include\
	-I$(ANDROID_ROOT)/external/skia/include\
	-I$(ANDROID_ROOT)/out/target/product/generic/obj/include\
	-I$(ANDROID_ROOT)/bionic/libc/arch-arm/include\
	-I$(ANDROID_ROOT)/bionic/libc/include\
	-I$(ANDROID_ROOT)/bionic/libstdc++/include\
	-I$(ANDROID_ROOT)/bionic/libc/kernel/common\
	-I$(ANDROID_ROOT)/bionic/libc/kernel/arch-arm\
	-I$(ANDROID_ROOT)/bionic/libm/include\
	-I$(ANDROID_ROOT)/bionic/libm/include/arch/arm\
	-I$(ANDROID_ROOT)/bionic/libthread_db/include\
	-I$(ANDROID_ROOT)/bionic/libm/arm\
	-I$(ANDROID_ROOT)/bionic/libm\
	-I$(ANDROID_ROOT)/out/target/product/generic/obj/SHARED_LIBRARIES/libm_intermediates\
    -I$(MLSDK_ROOT)/platform/include\
    -I$(MLSDK_ROOT)/platform/linux\


ML_SRCS = \
	$(ML_DIR)/log_linux.c \
	$(ML_DIR)/log_printf_linux.c \
	$(ML_DIR)/int_linux.c \
	$(ML_DIR)/mlos_linux.c \
	$(ML_DIR)/mlsl_linux.c

ML_OBJS := $(addsuffix .o,$(ML_SRCS))
ML_OBJS_DST = $(addprefix $(OBJFOLDER)/,$(addsuffix .o, $(notdir $(ML_SRCS))))

####################################################################################################
## macros

define echo_in_colors
@echo -ne "\e[1;32m"$(1)"\e[0m"
endef 

####################################################################################################
## rules

.PHONY: all clean cleanall

all: $(LIBRARY) $(MK_NAME)

$(LIBRARY) : $(OBJFOLDER) $(ML_OBJS_DST) $(MK_NAME)
	@$(call echo_in_colors, "\n<linking $(LIBRARY) with objects $(ML_OBJS_DST)\n")
	$(LINK) -o $(LIBRARY) $(ML_OBJS_DST)

$(OBJFOLDER) : 
	@$(call echo_in_colors, "\n<creating object's folder 'obj/'>\n")
	mkdir obj

$(ML_OBJS_DST) : $(OBJFOLDER)/%.c.o : %.c  $(MK_NAME)
	@$(call echo_in_colors, "\n<compile $< to $(OBJFOLDER)/$(notdir $@)>\n")
	$(COMP) $(ANDROID_SRC) $(CFLAGS) -o $@ -c $<

clean : 
	rm -fR $(OBJFOLDER)

cleanall : 
	rm -fR $(LIBRARY) $(OBJFOLDER)
